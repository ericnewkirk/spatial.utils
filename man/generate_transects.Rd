% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transects.r
\name{generate_transects}
\alias{generate_transects}
\title{Generate Line Transects}
\usage{
generate_transects(
  sampling_frame,
  total_length_km,
  frame_buffer_km = 0.5,
  angle_deg = 0,
  min_length_km = 5,
  max_length_km = 1000,
  break_buffer_km = 0.5,
  min_space_km = 1
)
}
\arguments{
\item{sampling_frame}{\code{sf} object  with the polygon(s) to be surveyed.
\code{sampling_frame} should use a projected CRS with meters as the unit.}

\item{total_length_km}{Total length of transects to generate in kilometers}

\item{frame_buffer_km}{Distance from polygon edges in kilometers at which
transects start or stop. The actual area allowed for placing transects is
\code{sf::st_buffer(sampling_frame, frame_buffer_km * -1000)}.}

\item{angle_deg}{Orientation of the output transects in degrees.}

\item{min_length_km}{Minimum length in kilometers for any individual
transect. Transects shorter than \code{min_length_km} are discarded from
the survey.}

\item{max_length_km}{Maximum length in kilometers for any individual
transect. Transects longer than \code{max_length_km} are split into
multiple transects with space in between.}

\item{break_buffer_km}{Determines the amount of space separating the new
transects when a transect longer than \code{max_length_km} is split. This
argument determines the distance from the original transect centroid to the
endpoints of the new transects, so the resulting transect endpoints will be
\code{break_buffer_km * 2} kilometers apart.}

\item{min_space_km}{Minimal interval in kilometers to consider for transect
spacing. Should be larger than the width of a single transect at a minimum.}
}
\value{
Returns an \code{sf} object with features of type \code{LINESTRING}
  with a special attribute \code{spacing_km} that contains the spacing used
  to generate the transects.
}
\description{
Creates line transects covering a given sampling frame made up of one or more
  polygons, spaced evenly at an interval that results in a total length as
  close as possible to the target total provided.
}
\examples{
\dontrun{

# Create transects across entire herd unit polygon
hu <- wgfd_agol_data("AntelopeHerdUnits") |>
  dplyr::slice_sample(n = 1) |>
  sf::st_transform("ESRI:102212")
hu_transects <- generate_transects(hu, 1500)

# Create transects at a 45 degree angle
hu_angled_transects <- generate_transects(hu, 1500, angle_deg = 45)

# Check total length
sum(sf::st_length(hu_angled_transects))

# Check the spacing selected
attr(hu_angled_transects, "spacing_km")

# Plot transects
hu_angled_transects |>
  sf::st_geometry() |>
  plot()

# Create transects broken up by hunt area
ha <- wgfd_agol_data("AntelopeHuntAreas") |>
  dplyr::filter(HERDNAME == hu$HERDNAME[1]) |>
  sf::st_transform("ESRI:102212")
ha_angled_transects <- generate_transects(hu, 1500, angle_deg = 45)

# plot those to demostrate the effect of multiple polygons in the input
ha_angled_transects |>
  sf::st_geometry() |>
  plot()

}

}
